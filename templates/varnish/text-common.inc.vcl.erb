// Common functions for the Text Varnish cluster

sub cookie_munging {
	// This header is saved, and restored before sending it to MediaWiki
	if (req.restarts == 0) {
		set req.http.Orig-Cookie = req.http.Cookie;
		unset req.http.Cookie;

		// We need to vary on the forceHTTPS cookie
		if (req.http.Orig-Cookie ~ "forceHTTPS=(1|true)") {
			set req.http.Cookie = "forceHTTPS=1";
		}
	}
}

sub restore_cookie {
	// Restore the original Cookie header for upstream
	// Assumes client header Orig-Cookie has been filtered!
	if (bereq.http.Orig-Cookie) {
		set bereq.http.Cookie = bereq.http.Orig-Cookie;
		unset bereq.http.Orig-Cookie;
	}
}

sub evaluate_cookie {
	// A session or token cookie will prevent caching if varied on,
	// move the Cookie header out of the way otherwise
        // The (?<!mwuser-) part unbreaks the bad cache effects of
        // the temporary live deployment on large wikis of:
        //   https://gerrit.wikimedia.org/r/#/c/176948
        // Can be removed when most matching cookies have gone away...
	// I've added another temporary exception here for the
	// clicktracking-session= cookie I've been observing in our traffic
	// lately.  I think we haven't set this in a long time, but it's still
	// out there in browsers, possibly due to lack of expiry.  We may need
	// to explicitly send out some cookie-deletes for it to fix....
	if (req.http.Cookie ~ "((?<!(mwuser|acking)-)[sS]ession|Token)=") {
		set req.hash_ignore_busy = true;
	} else {
		call cookie_munging;
	}
}
