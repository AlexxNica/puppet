#!/bin/bash
#
# Track slow queries and their history in a db using pt-query-digest
# Filters out SELECT MASTER_POS_WAIT queries which would otherwise 
# rise to the top.

pw=<%= scope.lookupvar('passwords::mysql::querydigest::mysql_ops_db') %>
mysql_user=<%= mysql_user %>
digest_host=<%= digest_host %>
digest_db=<%= digest_db %>
hostname=$(hostname)
log=/a/sqldata/${hostname}-slow.log

# exit quietly if $log does not exist or is 0 bytes
[ -s $log ] || exit 0

# kill any running pt-query-digest procs
# this is paranoia over a potential pileup in the case
# of very large log files as was previously observed 
# with mk-query-digest. shouldn't be needed due to
# --run-time parameter
/usr/bin/pgrep -f /usr/bin/pt-query-digest >/dev/null && /usr/bin/pkill -9 -f /usr/bin/pt-query-digest

/usr/bin/pt-query-digest --review h=${digest_host},D=${digest_db},t=${hostname}_query_review,u=${mysql_user},p=${pw} \
	--create-review-table \
	--review-history h=${digest_host},D=${digest_db},t=${hostname}_query_review_history,u=${mysql_user},p=${pw} \
	--create-review-history-table \
	--noreport \
	--run-time 9m \
	--filter '$event->{fingerprint} !~ m/^select master_pos_wait/' \
	$log

> $log
