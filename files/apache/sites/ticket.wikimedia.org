# ticket.wikimedia.org http -> https
<VirtualHost *:80>
	ServerName ticket.wikimedia.org
	RewriteEngine On
	RewriteRule ^.*$ https://ticket.wikimedia.org/ [R]
</VirtualHost>

# otrs-test.wikimedia.org -> nowhere
<VirtualHost *:80>
	ServerName otrs-test.wikimedia.org
	<Directory />
		Order allow,deny
	</Directory>
</VirtualHost>

# https://ticket.wikimedia.org
<VirtualHost *:443>
	ServerName ticket.wikimedia.org

	SSLEngine On
	SSLProtocol -ALL +SSLv3 +TLSv1
	SSLCipherSuite AES128-GCM-SHA256:RC4-SHA:RC4-MD5:DES-CBC3-SHA:AES128-SHA:AES256-SHA
	SSLHonorCipherOrder on
	SSLCertificateFile /etc/ssl/certs/star.wikimedia.org.chained.pem
	SSLCertificateKeyFile /etc/ssl/private/star.wikimedia.org.pem

	# Make an access log, so we know when people abuse OTRS's insecure interface
	LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"" combined
	CustomLog /var/log/apache2/otrs-access.log combined

	# This is mostly standard boilerplate from otrs/README.webserver [TS]
	# agent, admin and customer frontend
	ScriptAlias /otrs/ "/opt/otrs/bin/cgi-bin/"
	Alias /otrs-web/ "/opt/otrs/var/httpd/htdocs/"

	# load all otrs modules
	PerlRequire /opt/otrs/scripts/apache2-perl-startup.pl

	# Apache::Reload - Reload Perl Modules when Changed on Disk
	# (slow, use only when necessary)
	#PerlModule Apache2::Reload
	#PerlInitHandler Apache2::Reload
	#PerlModule Apache2::RequestRec

	RewriteEngine On
	RewriteRule ^/otrs$ /otrs/index.pl [R=301]
	RewriteRule ^/otrs/$ /otrs/index.pl [R=301]
	RewriteRule ^/$ /otrs/index.pl [R=301]

	# Fix incorrect TicketID links (common on Wikipedia)
	RewriteCond %{QUERY_STRING} ^Action=AgentTicketZoom\&TicketID=(200[0-9]{13})$
	RewriteRule ^/otrs/index\.pl /otrs/index.pl?Action=AgentTicketZoom&TicketNumber=%1 [R]

	# set mod_perl2 options
	<Location /otrs>
		ErrorDocument 403 /otrs/index.pl
		SetHandler  perl-script
		PerlResponseHandler ModPerl::Registry
		Options +ExecCGI
		PerlOptions +ParseHeaders
		PerlOptions +SetupEnv
		Order allow,deny
		Allow from all
	</Location>
</VirtualHost>
